import numpy as np
from scipy import signal
import matplotlib.pyplot as plt

fs = 1000
t = np.arange(0,1,1/fs)
rng = np.random.default_rng()

x = np.cos(2*np.pi*100*t) + np.sin(2*np.pi*200*t) + (2*rng.random(size=t.shape)-1)
y = 0.5*np.cos(2*np.pi*100*t - np.pi/4) + 0.35*np.sin(2*np.pi*200*t - np.pi/2) + (2*rng.random(size=t.shape)-1)
# Hamming=signal.windows.hamming(100)
f, Cxy = signal.coherence(x, y, fs, window='hamming',nperseg=100, noverlap=80)
# noverlap段之间重叠的点数 若None,noverlap = nperseg // 2.默认为None.

plt.plot(f, Cxy)
plt.title('Magnitude-Squared Coherence')
plt.xlabel('Frequency [Hz]')
plt.ylabel('Coherence')
plt.grid()
plt.show()

f, Pxy = signal.csd(x, y, fs,window='hamming', nperseg=100, noverlap=80)
for i in range (len(Pxy)):
    if Cxy[i]<0.25:
        Pxy[i]=0
    else:
        Pxy[i]=Pxy[i]

plt.plot(f, abs(np.angle(Pxy)/np.pi))
plt.title('Cross Spectrum Phase')
plt.xlabel('frequency [Hz]')
plt.ylabel('Lag (times\pi rad)')
plt.grid()
plt.show()
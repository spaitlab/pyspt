import numpy as np
from scipy import signal
import matplotlib.pyplot as plt

fs = 1000
t = np.arange(0,1,1/fs)
rng = np.random.default_rng()
x = 0.25*np.cos(2*np.pi*100*t) + (2*rng.random(size=t.shape)-1)

F, pxx = signal.periodogram(x, fs,window='boxcar',nfft=len(x))
# python boxcar等于matlab中retwin

Pxx=10*np.log10(pxx[1:,]) # 将单位转换为dB
f=F[1:,]
plt.plot(f, Pxx)
plt.title('Periodogram Power Spectral Dendity Estimate')
plt.xlabel('Frequency(Hz)')
plt.ylabel('Power/frequency(dB/Hz)')
plt.grid()
plt.show()

# 找出最大值所对应的频率
pxx=pxx.tolist()
F=F.tolist()
fisher_g=(max(pxx)/sum(pxx))/2
print('fisher_g =',fisher_g )
print(F[pxx.index(max(pxx))])


import scipy.special as sc
N=len(Pxx)
nn=np.arange(1,np.floor(1/fisher_g)) # np.floor向下取整函数
I = ((-1)**(nn-1)*np.exp(sc.gammaln(N+1)-sc.gammaln(nn+1)-
       sc.gammaln(N-nn+1))*(1-nn*fisher_g)**(N-1))
I=np.array(I,dtype=np.float32)
pval = sum(I)
print(pval)